#!/bin/bash
#BSUB -a poe               #
#BSUB -J DART_POST         # Name of the job.
#BSUB -o DART_POST_%J.out  # Appends std output to file %J.out.
#BSUB -e DART_POST_%J.out  # Appends std error to file %J.err.
#BSUB -q serial_30min      # queue

. dart.postproc.env

#---------------------------------------------------------
#---- Observation Diagnostics ----------------------------
#---------------------------------------------------------

# first call obs_seq_to_netcdf
# call frt.obs_epoch_TeMPLaTe.jnl frt.obs_diag_TeMPLaTe.jnl to plot

cd ${D_filter}; ls -1 obs_seq.final.??????_????? > obsFile_list
${REMOVE} obs_epoch_???.nc;
${LINK} ${D_dart}/obs_seq_to_netcdf . ;  ./obs_seq_to_netcdf
${LINK} ${D_dart}/obs_diag . ;  ./obs_diag

cd ${D_output};

for ((var=0; var<${#gmt_kind[@]}; var++)); do
  for time in $( seq ${E_init} ${E_last} ); do
   tim=$( echo ${time} | awk '{ printf("%03d\n",$1) }' )
   sed -e 's;VARIABLENAME;'${gmt_kind[${var}]}';g' \
       -e 's;BINCURRENTTIME;'${tim}';g' \
       -e 's;EXPERIMENTNAME;'${E_info}';g' \
       -e 's;WORKDIRECTORY;'${WORK}';g' \
       ${D_PROG}/frt.obs_epoch_TeMPLaTe.jnl > frt.obs_epoch.jnl
   pyferret -nodisplay -script frt.obs_epoch.jnl
  done
  for ((regid=1; regid<=2; regid++)); do
   for ((borA=0; borA<${#diag_kind[@]; borA++)); do
    for ((inst=0; inst<${#inst_kind[@]}; inst++)); do
     sed -e 's;VARIABLENAME;'${gmt_kind[${var}]}';g' -e \
            's;VARIABLEKIND;'${inst_kind[$inst]}';g' -e \
            's;PARAMETER;'${diag_kind[$BorA]}';g' -e \
            's;REGIONID;'${regid}';g' -e \
            's;EXPERIMENTNAME;'${E_info}';g' \
            ${D_PROG}/frt.obs_diag_TeMPLaTe.jnl > frt.obs_diag.jnl
     pyferret -nodisplay -script frt.obs_diag.jnl
    done
   done
  done
done
