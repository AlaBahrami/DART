#!/bin/bash
#BSUB -J ens_check               # Name of the job.
#BSUB -o LOG/ens_check_%J.out    # Appends std output to file %J.out.
#BSUB -e LOG/ens_check_%J.out    # Appends std error  to file %J.out.
#BSUB -q serial_30min            # queue

#---check if any members of the ensemble crashed-----------------
#---check if the experiment finished-----------------------------
#---if not, call filter------------------------------------------

#-- Load Experiment Environment Variables -----------------
. environment.load

#-- Ensemble required variables ---------------------------
ENSINFO=${ENSID}${MEMNO}; cd ${WRKDIR}
ENSCHECK=$( cat ${CHECKFILE} | wc -l )
if [ ${ENSCHECK} -eq ${MEMNO} ]; then
  SUBMITCHECK=$( awk '{SUM += $3} END {print SUM}' ${CHECKFILE} )
  if [ ${SUBMITCHECK} -ne 0 ]; then
    echo "One of the ensemble members stopped. Ensemble collapsed..."
    exit
  else
    cd ${WRKDIR}
    rm ${CHECKFILE}.prev; mv ${CHECKFILE} ${CHECKFILE}.prev
     #-------------------------------------------------------------
     # RUN THE FILTER HERE
     #-------------------------------------------------------------
     TMPLFILE=${RUNDIR}/filter.template
     SBMTFILE=${WRKDIR}/filter.${EXPINFO}
     sed "s;ENSEMBLEMEMBERNO;${MEMNO};g" ${TMPLFILE} > ${SBMTFILE};

     cd ${WRKDIR}; ID=$( jobid bsub < ${SBMTFILE} ); echo ${ID}
     #-------------------------------------------------------------
     # FINALIZE OR RESUBMIT THE JOB HERE
     #-------------------------------------------------------------
     TMPLFILE=${RUNDIR}/finalize.template
     SBMTFILE=${WRKDIR}/finalize.${EXPINFO}
     sed -e "s;^EXPID=.*$;EXPID=${EXPID};g" -e \
            "s;^EXPNO=.*$;EXPNO=${EXPNO};g" \
            ${TMPLFILE} > ${SBMTFILE}; cd ${WRKDIR};
     ID=$( jobid bsub -w "done(${ID})" < ${SBMTFILE} ); echo ${ID}
  fi
fi
